snippet lic "Snippet for adding license at the beginning of the file"
///
/// \file
/// \brief 	$1.
/// \author	Andrei Ehrlich
///
/// Copyright (c) `date +%Y`, GS Elektromedizinische Geraete G. Stemple GmbH.
/// All rights reserved.
///

$0
endsnippet


snippet ifndef "Snippet for adding include guards in a header file."
#ifndef $1
#define $1

$0

#endif // $1
endsnippet


snippet ns "Snippet for adding new namespace"
namespace $1 {
$0
} // namespace $1
endsnippet


snippet class "Snippet for adding new class."
///
/// \class	$1
/// \brief	${2:Very helpful class description.}
///
class $1
{
public:
	///
	/// \brief  Default constructor.
	///
	$1() = default;

	///
	/// \brief  Destructor.
	///
	~$1() = default;

$0
protected:
private:
	///
	/// \brief  Moving is not allowed.
	///
	$1($1&&) = delete;
	$1& operator=($1&&) = delete;

	///
	/// \brief  Copying is not allowed.
	///
	$1(const $1&) = delete;
	$1& operator=(const $1&) = delete;
};
endsnippet


snippet struct "Snippet for adding new struct."
///
/// \struct	$1
/// \brief	${2:Very helpful struct description.}
///
struct $1
{
	$1() noexcept = default;
	$1($1&&) noexcept = default;
	$1& operator=($1&&) noexcept = default;
	$1(const $1&) noexcept = default;
	$1& operator=(const $1&) noexcept = default;
	~$1() noexcept = default;
};
endsnippet


snippet cout "Snippet for std::cout."
std::cout << "$0" << std::endl;
endsnippet
